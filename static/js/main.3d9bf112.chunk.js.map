{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["buttonCaterories","App","useState","jokes","setJokes","React","anchorEl","setAnchorEl","open","Boolean","GetChuckjokes","event","a","fetch","then","res","json","joke","status","alert","catch","err","console","log","handleClose","className","IconButton","style","color","aria-label","aria-controls","aria-haspopup","onClick","currentTarget","Menu","id","keepMounted","onClose","e","PaperProps","maxHeight","ITEM_HEIGHT","width","map","option","MenuItem","target","innerText","class","src","icon_url","alt","categories","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAQMA,EAAmB,CACvB,SACA,SACA,YACA,MACA,WACA,UACA,OACA,UACA,QACA,QACA,QACA,YACA,WACA,UACA,QACA,UAiGaC,MA9Ff,WAAgB,IAAD,EACaC,mBAAS,MADtB,mBACNC,EADM,KACCC,EADD,OAGmBC,IAAMH,SAAS,MAHlC,mBAGNI,EAHM,KAGIC,EAHJ,KAIPC,EAAOC,QAAQH,GAKfI,EAAa,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACdC,MAAM,oDAAD,OAAqDF,IAC7DG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACe,MAAhBA,EAAKC,OACPC,MAAM,mCAENf,EAASa,MAGZG,OAAM,SAACC,GACNC,QAAQC,IAAI,oBAXI,2CAAH,sDAebC,EAAc,WAClBjB,EAAY,OAGd,OACE,sBAAKkB,UAAU,MAAf,UACE,8BACE,oBAAIA,UAAU,OAAd,gEAIF,sBAAKA,UAAU,YAAf,UACE,cAACC,EAAA,EAAD,CACED,UAAU,SACVE,MAAO,CAAEC,MAAO,OAChBC,aAAW,OACXC,gBAAc,YACdC,gBAAc,OACdC,QApCY,SAACrB,GACnBJ,EAAYI,EAAMsB,gBA6Bd,gCAUA,cAACC,EAAA,EAAD,CACEC,GAAG,YACH7B,SAAUA,EACV8B,aAAW,EACX5B,KAAMA,EACN6B,QAAS,SAACC,GACRd,KAEFe,WAAY,CACVZ,MAAO,CACLa,UAAWC,IACXC,MAAO,SAXb,SAeG1C,EAAiB2C,KAAI,SAACC,GAAD,OACpB,cAACC,EAAA,EAAD,CAEEb,QAAS,SAACM,GACRhB,QAAQC,IAAIe,EAAEQ,OAAOC,WAErBrC,EAAc4B,EAAEQ,OAAOC,WACvBvB,KANJ,SASGoB,GARIA,WAab,8BACGzC,GACC,sBAAK6C,MAAM,MAAX,UACE,8BACE,qBAAKvB,UAAU,SAASwB,IAAK9C,EAAM+C,SAAUC,IAAI,UAEnD,qBAAKH,MAAM,UACX,sBAAKA,MAAM,UAAX,UACE,+BAAK7C,EAAMiD,WAAX,WACA,4BAAIjD,EAAMkD,oBCpGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3d9bf112.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst ITEM_HEIGHT = 48;\nconst buttonCaterories = [\n  \"animal\",\n  \"career\",\n  \"celebrity\",\n  \"dev\",\n  \"explicit\",\n  \"fashion\",\n  \"food\",\n  \"history\",\n  \"money\",\n  \"movie\",\n  \"music\",\n  \"political\",\n  \"religion\",\n  \"science\",\n  \"sport\",\n  \"travel\",\n];\n\nfunction App() {\n  const [jokes, setJokes] = useState(null);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const GetChuckjokes = async (event) => {\n    await fetch(`https://api.chucknorris.io/jokes/random?category=${event}`)\n      .then((res) => res.json())\n      .then((joke) => {\n        if (joke.status === 404) {\n          alert(\"No joke found for this category\");\n        } else {\n          setJokes(joke);\n        }\n      })\n      .catch((err) => {\n        console.log(\"ERROR occured\");\n      });\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1 className=\"name\">\n          Click button Below to select and view chuck joke\n        </h1>\n      </div>\n      <div className=\"container\">\n        <IconButton\n          className=\"button\"\n          style={{ color: \"red\" }}\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n        >\n          Click me to select\n        </IconButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={(e) => {\n            handleClose();\n          }}\n          PaperProps={{\n            style: {\n              maxHeight: ITEM_HEIGHT * 4.5,\n              width: \"20ch\",\n            },\n          }}\n        >\n          {buttonCaterories.map((option) => (\n            <MenuItem\n              key={option}\n              onClick={(e) => {\n                console.log(e.target.innerText);\n\n                GetChuckjokes(e.target.innerText);\n                handleClose();\n              }}\n            >\n              {option}\n            </MenuItem>\n          ))}\n        </Menu>\n      </div>\n      <div>\n        {jokes && (\n          <div class=\"box\">\n            <div>\n              <img className=\"avatar\" src={jokes.icon_url} alt=\"new\" />\n            </div>\n            <div class=\"glass\"></div>\n            <div class=\"content\">\n              <h2>{jokes.categories} Joke</h2>\n              <p>{jokes.value}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}